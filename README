This is an implementation of Mahjong solitaire in Tcl/Tk/Snit/Img.
Because I play gnome-mahjongg all the time and I wanted to change it.
This was a lot easier and faster for me than learning how to use the 
gnome games framework.

The script should run on Linux, Windows, and MacOS using the ActiveTcl
distribution from activestate.com.

Yet to do:

[x] Make undo/redo work correctly.
[x] Make undo/redo work on the game generation thread.
[x] Make count-moves work.
[x] Make a menu accelerator that opens the menu.
[x] Make rows and blocks persistent data.
[x] Make row closures persistent data.
[x] Test generated deal in reverse against play rules.
[x] Loop out the failed deals.
[x] Prune the unused methods.
[x] Implement choose game by name.    
[x] Fix the generator so it doesn't fail.
  This does throw an uncaught exception sometimes, not sure how.
  Found the uncaught exception.  Tried generating with backtrack,
  it's faster to reshuffle on first failure, backtracking never
  succeeded.
[x] Fix the tiles that don't work in my svg-to-canvas
  because they depend on interior regions in paths being
  transparent to the background.
[x] the Red Dragon is filled, path4352
[s] center of South is filled, path4308
[x] 4's are filled, except in Seasons and Flowers
[s] two regions filled in Green Dragon, path4360 and path4362
[x] the 1 of coins is strange
[x] the 2-9 of coins is all over the place, path3518 dots
[x] dots and dots2 are the same except for color
[x] bams and bams2 are the same except for color  
[x] the red character on numbers has four fills that
  are drawn in foreground color in the wrong place.
  now drawn in the right place but still in foreground.
  I think they're inside out polygons.
[x] multipart paths were not retaining the end of the last
  part to the beginning of the next path.
[x] the bams internal whites are not shown
[x] redo the red dragon, it looks lumpy
[x] Fix the tilted bams, they are still solid
[x] Make the svg tile set work without inkscape
[x] Implement hints
[x] Implement pause/continue
[x] Figure out why the seasons and flowers are blanks
[x] Popup a game over dialog when all plays have been made.
[x] Implement preferences
[x] Get the adaptive framing and sizing to work correctly.
[x] Scale images for window size.
[x] Canvas based imaging is too slow, need to cache the images
  as they become available, or maybe I redraw and erase them too often?
[x] Increase the default font size for menus, dialogs, entries, etc.
  Changed several things and some fonts changed size while others didn't
[x] Stop clock during pause and end-of-game dialog
[x] tk scaling can be set from [winfo screenwidth] etc.
[x] there is a toplevel ubuntu display scaling that gets passed on where?
[x] adjust the stagger in the 3d stacking    
[ ] Switch back to using xml layout descriptor
[ ] Implement save/restore
[ ] Implement scores
[ ] Implement help.
[ ] Implement right/left cursor cycling through hints?
  This doesn't actually work, though I suppose that
  if you select a tile, hint might cycle through the
  matching tiles.  So you could implement a cursor motion
  key mode which cycled through the selectable tiles, used
  <return> to select and then cycled through the selectable 
  matches, and finally used <return> to select the play, or
  used <backspace> to cancel the first selection.
[ ] there is a white streak in the upper swash of the West character
  path4304, resisted attempts to fix it
[ ] the coins fade at reduced scale, need width boosting
[ ] End of game dialog when winning should enter the scores window
[ ] redo into game over doesn't get the same reaction as manually selecting
  the same result
[ ] altering window size while drawing tiles results in misplaced tiles
[ ] Rewrite wish for khronos graphics
[x] Interesting, the last three layers are a 3-2-1 pyramid which cannot be
completed if they are the only tiles left, you can play 4 but you'll deadlock
on the last two, you need two additional open slots somewhere else to complete
the layout and you need to keep those two additional open slots for the last
two plays. Each level has a certain number of last plays, tiles that can be
played after everything else is done:  2 on 0, 12 on 1, 4 on 2, 2 on 3, 
0 on 4 and 5, and 1 on six.  They are the uncovered endcaps.
[x] Attempting various ways to avoid deadlock
[x] avoid deadlock by sorting naked-endcaps to end of shuffled slots
[x] avoid deadlock by preferring non-naked endcaps for unplay
[x] Fix the error in the covers-empty-in-x test for can-unplay
[x] Fix almost all deadlocks by single undo of previous play, sometimes
repeated for a second or third deadlock.
[ ] Implement -trace option to enable data output.
[ ] Implement -watch preference to watch the deal get built
